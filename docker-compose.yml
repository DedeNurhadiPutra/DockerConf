networks:
  laravel:
    name: laravel-docker

services:
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: nginx
    depends_on:
      - php
      - pgsql
    ports:
      - 8080:80
      - 443:443
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel

  pgsql:
    image: postgres:16.3-alpine
    container_name: pgsql
    ports:
      - 5432:5432
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: laraveldbpostgres
    networks:
      - laravel
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    networks:
      - laravel

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['php', 'artisan']
    networks:
      - laravel

  npm:
    image: node:latest
    container_name: npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel

  # apache:
  #   build:
  #     context: .
  #     dockerfile: apache.dockerfile
  #   container_name: apache
  #   ports:
  #     - 8081:80
  #     - 443:443
  #   volumes:
  #     - ./src:/var/www/html
  #   networks:
  #     - laravel
